	15
!isspace(text[i]))	1
"1");	2
"mapreduce/mapreduce.h"	1
"spec"	1
#include	1
&&	2
&result))	1
(!MapReduce(spec,	1
(!input->done())	1
((i	2
(1)	4
(2)	3
(3)	1
(4)	2
(5)	2
(6)	1
(Duplicate	1
(IOPADS	1
(IsCapitalized(w)):	1
(M	2
(MB)	1
(MB/s)	10
(R	2
(R)	1
(R).	1
(The	1
(a)	2
(a),	1
(approxi-	1
(b),	1
(because	1
(c)	1
(c),	1
(con-	1
(e.g.	5
(e.g.,	2
(for	1
(i.e.,	1
(idle,	1
(implemented	1
(in	1
(instead	1
(int	2
(just	2
(k1,v1)	1
(k2,list(v2))	1
(managed	1
(map	1
(on	1
(one	2
(piggybacked	1
(since	2
(so	1
(start	1
(such	1
(the	3
(there	1
(typically	1
(we	1
(where	1
)	1
+	1
+=	2
.	1
...	1
//	24
/gfs/test/freq-00000-of-00100	1
/gfs/test/freq-00001-of-00100	1
0	8
000	3
000,	1
0;	4
1	9
1).	1
1,	1
1-1.5GB	1
1.	1
1.2	1
10	1
10-byte	1
100	3
100-200	1
100-byte	2
1000	11
10000	10
1010	2
1057	1
10–22,	1
11	1
1124,	1
12	1
1283	1
13	2
13].	1
150	1
15000	8
15000),	1
15000).	1
157	1
15],	1
16	2
160GB	1
16th	1
1700	2
1746	1
1764	1
1800	1
193	1
1980.	1
1989.	2
1996.	2
1997	1
1997.	3
1999.	2
19th	1
1:	2
1;	1
1>.	1
1st	1
1⟩.	1
2	6
2,000	1
2-4	2
2-way	1
2.	1
2.1	1
2.1.	1
2.2	1
2.3	1
20	2
200	4
200,	1
2000	1
20000	9
2001.	1
2003	1
2003,	2
2003.	2
2003/03	1
2003/06	1
2003/09	1
2003/12	1
2004	15
2004.	5
2004/03	1
2004/06	1
2004/09	1
23(2):22–28,	1
269	1
27(4):831–838,	1
29,423	1
29–43,	1
2:	1
2GHz	1
3	9
3,288	1
3,351	1
3.	1
3.1	1
3.2	1
3.3	1
3.4	1
3.5	1
3.6	1
30	2
300	2
30000	1
33(8):103–111,	1
36(2):335–348,	1
3800	1
395	1
3:	1
4	5
4.	1
4.1	2
4.2	1
4.2.	1
4.3	1
4.4	1
4.5	1
4.6	1
4.7	1
4.8	1
4.9	1
40	1
400	1
4000	1
4000).	1
401–408.	1
426	1
44%	2
4:	1
4GB	2
5	4
5%	1
5,	1
5.	1
5.1	1
5.2	1
5.3	2
5.4	1
5.5	1
50	1
500	8
5000	7
55	1
6	3
6.	1
6.1	1
60	1
600	2
634	1
64	3
64MB	2
68–74,	1
7	3
7.	1
700	1
758	1
78–	1
79,186	1
8	2
80	3
800	1
850	1
891	1
9	1
9,	1
900	1
91,	1
92,337	1
933	1
960	1
9th	1
:	2
<	5
<the,	1
=	16
A	20
A.	6
ACM	2
ACM,	3
API	1
Abstract	1
Access	1
Acknowledgements	1
Active	1
Adder	1
After	2
Ailamaki.	1
All	5
Also,	1
Although	1
Anderson,	1
Andrea	2
Another	1
Anthony	1
Any	2
Appendix	2
April	2
Arash	1
Arizona,	1
Armando	1
Aron,	1
Arpaci-Dusseau,	4
As	4
At	2
Atlanta,	1
August	3
Average	4
B	1
B.	1
BAD-FS	1
Backup	2
Bad	1
Baratloo,	1
Barroso,	1
Before	1
Bent,	1
Blelloch.	1
Both	2
Bouge,	1
Brewer,	2
Bulk	1
Burrows,	1
By	1
C++	2
C++).	1
C-38(11),	1
C.	1
C.Arpaci-Dusseau,	1
CPU,	1
CPUs,	1
Cambridge,	1
Charlotte	1
Charlotte:	1
Chawathe,	1
Christos	1
Clients	1
Cluster	2
Cluster-based	1
Clusters	1
Combiner	3
Commodity	1
Communications	1
Completed	2
Computation:	1
Computer	1
Computer,	1
Computers,	1
Computing	1
Conclusions	1
Concurrency	1
Condor	2
Conference	2
Conference,	1
Configuration	1
Consider	2
Controls	1
Count	1
Counter*	1
Counters	1
Culler,	2
D.	1
Data	5
Data,	1
David	6
Dean	1
Dean,	1
Debby	1
Debugging	1
Design	1
Di-	1
Distributed	5
Done	3
Done:	1
Douglas	2
E.	5
Each	6
Effect	1
Efficient	1
Emit	1
Emit(AsString(result));	1
Emit(IntToString(value));	1
Emit(text.substr(start,i-start),"1");	1
EmitIntermediate(w,	2
Eric	3
Erik	1
Ethernet	2
Euro-Par’96.	1
Even	1
Ewing	1
Ex-	1
Example	1
Examples	1
Execution	3
Experience	1
Explicit	1
FAST	1
Failing	1
Failure	2
Failures	2
Faloutsos,	1
Fault	1
February	1
Figure	11
File	2
Finally,	1
Find	1
First,	2
Fischer.	1
For	15
Fox,	1
Fraigni-	1
France,	1
Frequency	1
Frequency:	1
Froogle	1
Function	2
Further-	1
Furthermore,	3
G.	1
GB	1
GB/s	3
GFS	5
GFS.	1
Ganger,	1
Garth	1
Gauthier.	1
Gbps	1
George,	1
Georgia,	1
German	2
GetCounter("uppercase");	1
Ghemawat	1
Ghemawat,	1
Gibson,	1
Gobioff,	2
Google	10
Google,	2
Google.	1
Google:	1
Google’s	3
Gorlatch.	1
Granularity	1
Graph:	1
Gray.	1
Grep	1
Grep:	1
Gribble,	1
Gropp,	1
Guarantees	1
Gutschke,	1
Guy	1
H.	3
HTTP	1
Having	1
Hellerstein,	2
Here	1
High-performance	1
Ho	1
Host:	1
How	1
How-	1
Howard	2
However	1
However,	3
Hsieh,	1
Huston,	1
Hyper-	1
I	2
I.e.,	1
I/O	3
ID)⟩pair.Thesetofalloutput	1
IDE	2
IDs	1
ID⟩	1
IEEE	3
Ideally,	1
Identity	1
If	6
Implementation	2
In	23
In-	1
Inc.	1
Including	1
Index:	1
Indexing	1
Information	1
Input	4
Input/Output	1
Intel	1
Interface.	1
Intermediate	2
International	1
Introduction	1
Inverted	1
It	7
Iterate	1
Iterator	1
J.	1
Jeffrey	2
Jim	2
John	1
Joseph	2
Josh	3
Journal	2
June	1
Karaul,	1
Kathy	1
Kedem,	1
Kramer,	1
L.	2
L.G.Valiant.Abridgingmodelforparallelcomputation.	1
Ladner	1
Lake	1
Large	1
Large-Scale	1
Le-	1
Lecture	1
Let	1
Leung,	1
Leven-	1
Levenberg	1
Liang	1
Like	2
Linux,	1
Lisp	1
Livny.	2
Local	1
Locality	1
Luiz	1
Lusk,	1
M	11
M.	3
MA,	1
MB	4
MB/s	1
MB/s.	1
MIT	1
MPI	1
MPI:	1
Machine	2
Machines	1
Making	1
Management	1
Many	3
Map	13
Map(const	1
Map,	1
MapInput&	1
MapRe-	6
MapReduce	78
MapReduce,	4
MapReduce.	1
MapReduce:	1
MapReduceInput*	1
MapReduceOutput*	1
MapReduceResult	1
MapReduceSpecification	1
Mapper	1
March	1
Markus	1
Master	2
May	2
Mehmet	1
Message-Passing	1
Metacomputing	1
Michael	2
Micro,	1
Mignotte,	1
Mike	1
Miron	2
Model	1
Mohit	1
More	2
Most	1
N	3
NOW-Sort	2
NSDI,	1
NUMA	1
Nagle.	1
Network	2
Networked	1
New	1
News	1
No	1
Noah	1
Normal	1
Note	1
Notes	1
November	1
Now	1
O(M	3
O.	1
OSDI	14
Of	1
Olcan	1
One	5
Op-	1
Operating	1
Optional:	1
Ordering	1
Otherwise,	1
Our	7
Out	1
Output	5
Over	1
Overview	1
P.	1
PCs	1
PCs.	1
Parallel	5
ParseCommandLineFlags(argc,	1
ParseInt(v);	1
Partial	1
Partitioning	1
Pat-	1
Patterson,	1
Paul	1
Percy	1
Performance	1
Periodically,	1
Perl,	1
Peter	1
Pike,	1
Portable	1
Practice	1
Presence	1
Press,	1
Principles,	2
Pro-	2
Proceedings	4
Processing	1
Processing,	1
Program	1
Programmers	1
Programming	3
Programs	1
R	17
R)	3
R).	1
R.	3
R1	3
R2	2
R2.	1
REGISTER_MAPPER(WordCounter);	1
REGISTER_REDUCER(Adder);	1
Rabin.	1
Records	1
Redstone	1
Reduce	17
Reduce(ReduceInput*	1
Reduce.	1
Reducer	1
References	1
Refinements	1
Related	1
Remzi	3
Reverse	1
Ri	1
Richard	1
Riedel,	2
River	3
River:	1
Rob	1
Robert,	1
Roughly	1
R”	1
R”).	1
S.	1
SIGMOD	1
Saint-Malo,	1
Sanjay	2
Satya-	1
Scans	1
Science	1
Sec-	2
Second,	2
Seconds	4
Section	8
Semantics	1
September	1
Sercinoglu	1
Sharon	1
Shuffle	3
Shun-Tak	2
Side-effects	1
Similarly,	1
Simplified	1
Since	3
Sixth	1
Skip	1
Skipping	1
Skjellum.	1
Some	1
Sometimes	1
Sort	2
Sort:	1
Source	1
Specify	1
Springer-Verlag,	1
Spsort:	1
Status	1
Steven	1
Storage	2
Store	1
Stragglers	1
String	2
StringToInt(input->value());	1
Structures	1
Such	1
Sukthankar,	1
Symposium	3
Synchronous	1
Sys-	1
System	2
Systematic	1
Systems	3
Systems,	1
TACC	1
TB	3
Table	1
Tannenbaum,	1
Task	1
Tasks	2
Technologies	1
TeraSort	2
Term-Vector	1
Thain,	2
The	105
There	3
Therefore,	2
These	4
Third,	2
This	16
Though	1
Threading	1
To	3
Todd	1
Tolerance	1
Transactions	1
Treuhaft,	1
Tucson,	1
Tuning	1
Types	2
Typically	3
Typically,	1
UDP	1
URL	5
URLs	2
URLs,	1
USENIX	2
Unique	2
Updates	1
Urs	1
Users	4
User’s	2
Using	2
Wallach	1
We	24
Web	1
Web-Link	1
When	13
Wickremesinghe,	1
William	1
Wilson	1
Word	1
WordCounter	1
Work	1
Worker	1
Workshop	1
Wyckoff.	1
Wyllie.	1
Xeon	1
Y-axis	1
Y.	1
Yatin	1
Yelick.	1
York,	1
Zeitgeist),	1
Zipf	1
Zvi	1
[10]	1
[10].	1
[11]	2
[12,	1
[12]	1
[13]	1
[14]	2
[15]	1
[16]	1
[16].	1
[17]	2
[18]	1
[18].	1
[1]	1
[1].	1
[2]	2
[3]	1
[3].	1
[4]	1
[4].	1
[5]	2
[6,	1
[6]	1
[7]	2
[8]	2
[8])	1
[8].	1
[9]	1
a	218
ability	1
able	3
able.	1
abort();	1
aborts	1
about	12
above	1
above.	3
abstraction	2
abstractions	1
abyte	1
abytes	2
acceptable	1
accepts	2
access	1
account	1
achieve	2
achieves	2
across	11
action	1
actions	1
active	2
activity	1
actual	1
ad-hoc	1
add	4
added	2
adding	1
addition,	2
additional	1
adds	2
advantage	1
affected	1
after	1
afternoon,	1
aggre-	1
aggregate	1
aggregates	1
al-	1
alent	1
all	24
allelize	2
alleviate	1
allow	1
allows	6
ally	1
almost	1
already	2
also	8
alternative	1
amond:	1
amount	7
amounts	4
ample,	1
an	32
analysis	1
and	194
and/or	4
anonymous	1
another	5
another,	1
antee	1
any	5
ap-	1
appear	13
appended	1
appli-	1
applicable	1
application	3
applying	2
approach	1
approach.	1
appropriate	1
appropriately	1
approx-	1
approxi-	1
approximately	9
architecture	1
architecture.	1
are	56
areas	1
argc,	1
argc;	1
argument	1
argv)	1
argv);	1
arise	3
arranged	1
array	1
as	42
as-	1
assign	2
assign.	1
assigned	4
assigned.	1
assignment	1
assigns	1
asso-	1
associ-	1
associa-	1
associated	3
associative	1
at	21
at-	1
ate	1
ated	1
atomic	4
atomically	2
ator.	1
attempting	1
attempts	2
attribute	1
aud,	1
augment	1
authors	1
auto-	1
automati-	1
automatic	1
automatically	3
automatically.	1
auxiliary	1
avail-	1
availability	2
available	4
average	1
averaging	1
avoid	2
away	1
back	3
backup	7
bad	2
balanced	1
balancing	3
balancing,	1
balancing.	1
band-	2
bandwidth	6
bandwidth.	4
based	2
basic	2
basis	1
batch	2
batch-aware	1
be	27
be-	4
because	10
become	3
becomes	1
been	16
before	1
before,	1
behavior	1
below):	1
benchmark	4
bene-	1
ber	3
berg,	1
best	1
between	5
bisection	1
block	1
blocks,	1
both	1
bottom-left	1
boundaries).	1
bounds	1
brary	1
broadly	1
buffered	4
bug	3
bug,	1
bugs	3
built-	1
built-in	1
bus	1
busy	1
but	5
by	60
bypasses	1
byte	1
bytes	4
cable.	1
caches	1
cal	1
call	1
call,	1
calls	3
cally	1
can	20
care	1
careful	1
case	3
cases,	3
catches	1
cation	1
cause	4
caused	3
causes	3
causing	2
ceedings	2
certain	3
cessed	2
cessed,	1
cesses	2
change	2
changed	1
char**	1
check	1
checked	1
checking	1
checkpointed	1
checkpoints	1
chine	4
chines	2
chines,	1
choice	1
choose	1
ciated	1
class	4
classes	1
close	2
clus-	2
cluster	12
cluster,	1
cluster-based	1
cluster.	4
clustering	1
clusters	3
code	20
code.	3
coding	1
collect	1
collection	3
com-	5
combinations	1
combine	2
combined	1
combiner	3
combiner.	1
combining	1
command	1
comments	1
commits	1
committed	1
commodity	4
common	2
common.	2
communicate	1
communication.	1
commutative	1
competition	1
complet-	1
complete	4
complete.	1
completed	6
completed),	1
completed,	2
completed.	3
completes,	2
completes.	2
completing.	1
completion	4
completion,	2
complex	1
complexity,	1
comprising	1
compu-	4
computa-	2
computation	17
computation,	4
computation.	8
computational	3
computations	12
computations,	1
computations.	1
compute	3
computed	1
computing	4
con-	4
concatenates	1
conceptu-	1
conceptually	2
condition	1
conduit	1
connected	2
conserve	1
considerably	1
considered	1
consisted	1
consistency	1
consists	4
conspire	1
const	2
constant	1
constrained	2
consumes	1
consumption.	1
contain	1
containing	1
contains	7
contents	4
contents):	1
contents:	1
continue	1
continued	1
contrast,	1
contributions	1
control	1
controller	1
convert	1
copies	5
copies)	1
copy	2
corpus	1
corre-	3
correctable	1
correspond	1
corresponding	5
could	1
count	3
counter	9
countered,	1
counters,	1
counting	2
counting.	1
counts	4
count⟩	1
course	3
crash	1
crashes	1
crawled	2
crawling	1
creates	1
cross-file	1
cur	1
cur-	1
currences	1
current	2
cycle.	1
data	63
data).	2
data,	6
data.	5
database,	1
date	1
day,	1
day.	1
days	3
de-	3
deal	2
deals	1
dealt	1
deaths	2
debugging	1
debugging,	1
decisions	2
default	1
define	1
delay	1
delays	1
depends	2
der	1
der.	1
derived	2
derlying	1
described	8
describes	3
designed	3
desire	1
desire.	1
details	3
detects	1
determin-	1
deterministic	1
deterministic,	2
deterministically	1
developed	3
developing	2
development	1
dexing	1
diagnose	1
diate	3
dict	1
dies	1
dies,	1
difference	2
different	15
directly	3
dis-	4
disabled.	2
disabled:	1
disappears	1
discard	1
discusses	1
disk	6
disk(s)	1
disk,	2
disks	6
disks)	1
disks,	4
disks.	2
dispersal	1
distillation	1
distribute	2
distributed	12
distribution	5
distribution,	1
divides	1
dles	1
do	4
do-	1
docu-	2
document	6
document).	1
documents	6
documents,	2
does	3
doing	1
domain	1
domains	1
done	2
don’t	1
double	1
down	1
drafts	1
drawn	1
draws	1
dropped	1
dropping	1
dual-processor	1
duce	10
duce.	1
duces	1
due	3
duplicate	1
during	1
dynamic	2
dynamically	2
e(R1)	1
e(R2)	1
e(Ri)	1
each	29
eager	2
earlier	1
early	2
eas-	1
easier	3
easily	4
easily.	1
easy	11
editors,	1
effective),	1
effects	1
efficient	3
efficiently	1
either	2
elapsed	1
elapsed.	1
element	1
elements	1
eligible	2
eliminates	1
emits	11
emitted	1
employed	1
en-	2
enabled,	1
enables	1
ence.	1
encountered	1
end	6
ends	1
engineering	1
enhance-	1
enhancements	1
enough	1
ensure	1
ensures	1
entire	7
entries	2
environment	1
environment.	3
environment:	1
equals	1
equiv-	1
equivalent	1
eral	1
erasure	1
erated	1
erating	1
eration	3
error	1
errors	1
errors.	1
etc.	5
etc.,	1
even	3
events.	1
eventually	1
ever,	1
every	2
ex-	1
exactly	2
exam-	2
example	3
example).	1
example,	12
example.	1
example:	1
examples	1
examples.	1
except	2
execu-	1
execute	1
executed	9
executes	2
executing	1
execution	21
execution).	1
execution.	1
executions	5
expect	1
expected.	1
experi-	1
experience	6
experienced	1
experiences	1
exploit	1
exploits	1
explores	1
exports	1
express	1
expressed	2
expresses	1
expressible	2
extending	1
extensions	1
external	1
extra	1
extracted	1
extraction	2
extractionofpropertiesofwebpagesfornewexper-	1
extracts	3
f	1
fac-	1
facilitate	1
facilities	1
facility	4
facility,	1
fact	2
factor	1
failed	2
failed),	1
failed,	1
failed.	2
fails	1
fails.	1
fails:	1
failure	3
failures	5
failures,	3
failures.	2
failures.)	1
fairly	2
fashion,	1
fast	1
faster	1
fault	3
fault-tolerance,	2
fault-tolerance.	2
fault-tolerant	1
fault-tolerant.	1
feasible;	1
features	1
feedback,	1
few	9
figure	1
file	25
file,	1
file.	7
files	22
files,	1
files.	3
files:	1
fill	1
fin-	2
final	9
find	3
fine-	1
finish	4
finish,	1
finish.	1
first	8
fit	2
fits:	1
five	2
fix	2
flag	1
flow	2
focus	1
follow	1
follow-	1
following	1
for	94
fore	1
fork	3
form	3
format	2
formats	1
formats.	1
forms	1
forward	2
forwarding	1
found	6
fraction	3
framework	1
fre-	1
frequencies	1
frequent	1
from	38
full	1
fully	2
func-	4
function	39
function,	3
function.	6
functional	3
functionality	1
functioning	1
functions	8
functions:	1
fundamental	1
future	1
ganization	1
gasp”	1
gating	1
gdb).	1
gen-	2
general	3
generate	2
generated.	1
generates	1
generating	1
geographi-	1
gested	1
get	1
gether	1
gets	1
gigabit	1
gigabit/second	1
given	7
gives	1
global	2
good	3
gracefully.	1
gradually	1
grained	1
gram	3
gramming	2
grams	1
grams.	1
gram’s	1
graph	6
greatly	2
grep	2
grep.	1
grouped	1
groups	2
growth	1
guar-	1
guarantee	2
had	2
half	2
han-	1
handle	3
handler	2
handling	2
happens	2
hardly	1
hardware	2
hardware.	1
has	18
hash(key)	1
hashing	1
have	31
havior.	1
head.	1
help	2
helpful	2
heterogeneous	1
hiccups	1
hidden	1
hides	2
high	1
higher	2
higher-level	1
highly	1
highly-available	1
his	1
hits	1
home	1
homomorphisms.	1
host	3
host,	1
host.	1
hosting	1
hostname	1
hour,	1
how	8
however,	1
however:	1
http://alme1.almaden.ibm.com/cs/spsort.pdf.	1
http://research.microsoft.com/barc/SortBenchmark/.	1
human	2
hump	1
hundred.	1
hundreds	6
i	4
i)	1
i++)	1
i++;	2
i;	1
idempotent.	1
identity	2
idle	3
idle.	1
if	9
ignore	1
ignores	1
ily	1
im-	1
imately	1
iments	1
immediately	1
impact	1
imple-	1
implement	2
implementation	15
implementation,	1
implementation.	1
implementations	3
implemented	3
implementing	1
important	1
improve	1
improved.	1
improves	1
in	122
in-	8
in-house	2
in-progress	3
in-progress,	1
inaccessible.	1
includes	2
including	3
including:	1
incre-	1
increase	2
increases	1
increasing	1
increments	1
index-	1
index.	1
indexed,	1
indexing	9
indicates	1
indices,	1
individual	3
inexpensive	1
info	1
informa-	1
information	5
infrequent	1
ing	4
ing.	1
ingful	1
ini-	2
initialization	1
input	40
input)	2
input,	1
input->NextValue();	1
input->key()	1
input->set_filepattern(argv[i]);	1
input->set_format("text");	1
input->set_mapper_class("WordCounter");	1
input.value();	1
inputs	1
inspiration	1
installs	1
instances	3
instead	2
instrumental	1
int	4
int64	1
intentionally	1
inter-	3
inter-machine	1
interacting	1
interesting	2
interface	3
interface,	1
interme-	3
intermedi-	1
intermediate	24
internal	1
intervention.	1
into	24
introduced	1
inverted	2
invoca-	1
invocation.	1
invocations	1
invoke	1
invokes	1
invoking	1
involved	1
is	122
ish	1
ishes	1
isspace(text[i]))	1
issue	1
issues	2
issues.	1
istic.	1
it	41
iter-	1
iterates	1
its	8
itself	1
ity	1
jeff@google.com,	1
job	7
job,	1
job.	1
jobs	6
just	4
keep	2
keeps	2
key	14
key,	4
key.	5
key/value	16
key:	2
keys	10
keys.	1
killed	2
killed)	1
killed,	1
kinds	2
knowledge	1
knows	1
labels	1
languages.	1
large	31
large-scale	5
larger	2
last	3
late	1
later	1
later.	1
leading	1
learned	1
learning	1
learning,	1
leave	1
leaves	1
lelize	1
lem	1
lengthens	1
less	4
level,	1
li-	1
library	20
library,	1
library.	2
like	3
limited	1
line	5
line.	2
lines	3
link	1
link.	1
linked	1
links	1
links.	1
lisecond.	1
list	6
list(k2,v2)	1
list(source)⟩	1
list(v2)	1
lists	1
live	1
load	5
local	14
locality	7
locality-aware	1
localized	1
locally	2
location	3
locations	4
locations,	1
log	1
logical	1
logs	2
logs,	1
long	3
longer	1
looking	1
lookups	1
loss	1
loss.	1
lows	1
ma-	7
machine	17
machine,	2
machine.	2
machines	21
machines,	10
machines.	14
made	2
main	1
main(int	1
maintained	1
maintenance	1
major	1
majority	1
make	12
makes	6
manage	1
management	4
managing	1
mantics.	1
many	13
map	64
map(String	2
map/reduce	1
mapped	2
mapre-	1
mapreduce	1
marked	1
marks	1
mas-	2
master	24
master,	2
master.	3
matches	1
mately	2
matically	1
may	8
mean-	1
measure	1
measurements	1
mechanism	9
mediate	2
megabits/second	1
megabytes	2
memory	5
memory,	4
memory.	3
ment,	1
mentally	1
mentation	1
ments.	2
merges	2
merging	1
message	2
message.	2
messy	1
middle-left	1
mil-	1
mining,	1
minute	1
minutes	1
minutes.	1
mits	1
mixing	1
mization,	1
mod	3
mode	2
model	11
model,	2
modeled	1
models	2
mode’s	1
modity	1
months	1
more	7
more,	1
most	13
mostly	1
much	3
multi-	1
multi-processor,	1
multiple	6
must	2
n	1
n)	2
n;	1
name	1
name,	1
named	2
names	4
narayanan,	1
near	2
necessarily	1
need	3
needed	2
needs	2
needs,	1
negative	1
negligible	1
net-	1
network	14
network.	4
network:	1
networked	2
networking	2
networks	1
never	1
new	8
next	1
no	4
non-	1
non-deterministic	3
non-faulting	1
non-idle	1
non-uniformities	2
normal	2
not	9
note:	1
notified	2
num-	3
number	20
number.	1
numbered	1
numbers	1
object	2
object.	1
obscure	1
oc-	2
occur	1
occurrences	4
occurs	2
occurs.	1
of	334
off	1
offset	1
often	4
old	1
on	68
on.	1
once	1
one	26
only	6
op-	2
open	1
operate,	1
operation	11
operation,	2
operation.	1
operations	2
operations,	1
operations.	5
operator	1
operator.	1
operators	3
operators,	1
operators.	1
opti-	1
optimization	4
optimization,	1
optimization.	1
optimizations	1
optional	4
or	28
or-	3
order	3
ordering	2
original	2
other	12
others	1
our	28
out	5
out-	2
out->set_combiner_class("Adder");	1
out->set_filebase("/gfs/test/freq");	1
out->set_format("text");	1
out->set_num_tasks(100);	1
out->set_reducer_class("Adder");	1
output	55
output,	1
output.	1
outputs	4
outputs,	1
over	16
over-	2
overall	1
overhead	2
overhead,	1
overview	1
pa-	1
packet	1
page	4
page.	1
pages	11
pair	6
pair.	5
pair.)	1
pair:	2
pairs	14
pairs,	3
pairs.	4
paper	1
paper,	1
paper.	1
par-	3
paral-	1
parallel	8
parallelization	3
parallelization,	2
parallelize	2
parallelized	1
parameter).	1
parameters.	1
parameters:	1
parses	2
part	1
parti-	1
partial	2
particular	5
partition	4
partition,	2
partition.	1
partitioned	2
partitioning	12
partitions	1
partitions.	1
pass	1
pass.	1
passed	2
passes	7
passing	1
past	2
pat-	1
pattern	2
pattern.	1
pe-	1
peaks	2
people’s	1
per	14
per-	1
per-document	1
per.	1
percent.	1
perform	2
performance	7
performs	1
perhaps	1
perience,	1
period	1
periodic	1
periodically	1
periodically.	1
perturbations.	1
phase	6
picks	2
piece	2
pieces	5
pieces,	1
pieces.	1
ping	1
pings	1
placed	1
planet:	1
played	1
ple	3
ple,	1
pleasantly	1
plementation	1
plus	1
point,	1
points	1
popular	1
positions.	1
possible	1
possible).	1
possible.	1
possibly	1
powerful	1
practical	1
practice,	1
practice.	1
practice:	1
pre-	1
pre-pass	1
predefined	1
prefix	2
prefixes	1
presence	3
present	1
prevent	1
previous	1
previously	1
primary	3
primitive	1
primitives	2
prior	1
private	1
pro-	15
prob-	1
problem	4
problems	6
problems,	1
procedure	1
proces-	1
process	7
process-	1
process.	1
processed	3
processed.	1
processes	5
processing	6
processors	4
processors,	1
processors.	1
produce	5
produced	13
produced.	1
produces	5
producing	1
production	3
products	1
products,	1
profiling,	1
program	16
program).	1
program,	1
program.	5
programmer.	1
programmers	5
programming	9
programs	7
program’s	1
progress	5
progress,	2
progress.	1
propagated	2
propagation	1
properly).	1
properties	1
property.	1
propriately.	1
prototyping	1
provide	10
provided	9
provides	3
providing	2
pseudo-code	1
pseudo-code:	1
public	2
public:	1
purposes.	1
pushed	2
put	4
putation	2
putations.	1
quent	1
queries	2
queues.	1
quickly	1
quickly.	2
quirements	1
random	1
range	3
ranges	1
rare	1
rary	1
rate	16
rates	1
rates,	1
rather	1
raw	2
re-	8
re-executed	3
re-execution	5
reaction	1
read	14
read.	1
reader	3
reading	1
reads	3
real	2
real-world	1
realized	1
reason	1
reasonable	2
reasons).	1
reasons.	2
received	2
receives	1
recent	1
record	1
record,	2
records	6
records).	1
records,	2
records.	2
record⟩	1
recover	1
recovery	1
redone.	1
reduce	69
reduce(String	1
reduced	1
reduces	2
reducing	1
redundant	3
refinements	1
regions	3
related	1
relatively	4
reliability	3
relies	2
rely	3
remaining	2
remote	2
rename	2
renames	2
rent	1
repeated	1
repetition	1
replica	2
replicas	2
replicated	1
replication	1
replication.	1
reported	1
reports	1
reports.	1
representa-	1
representations	1
representative	1
requency⟩	1
request	1
requests	1
required	1
requirements	1
rescheduling.	1
reserved	1
reset	2
resilient	1
resource	1
resource.	1
resources	5
response).	1
responsible	2
rest	1
restarted	1
restricted	3
restricting	2
restriction	1
restrictions	1
result	4
result;	1
retrieved	1
retry	1
return	1
returns	2
reviewers,	1
revising	1
rewrite	2
right	1
riod	1
root.	1
roughly	1
round-trip	1
run	5
run-time	1
running	7
runs	3
same	18
sample	1
sampled	1
san-	1
sand	1
sanjay@google.com	1
save	1
saves	1
scal-	1
scalable:	1
scales	3
scan	1
scanned.	1
scans	1
scarce	2
schedul-	1
schedule	3
scheduled	2
scheduler	2
schedules	1
scheduling	8
scribes	1
se-	1
search	3
search),	1
search.	1
searches	1
searching	1
seconds	9
seconds,	2
seconds.	1
secs	1
section	3
section.	1
security,	1
seen	1
segmentation	1
segregate	1
semantics	2
send	1
sending	1
sends	2
sent	7
separate	4
separate,	1
sequence	6
sequential	4
sequentially	1
ser-	1
server	1
service.	1
services.	2
set	22
set.	2
sets.	1
sev-	1
several	10
shared	2
shared-memory	1
shepherd,	1
shortcomings	1
should	4
show	5
shown	2
shows	9
shuffle	2
shuffles	1
shuffling	4
side-effects	1
signal	2
signal,	1
significant	5
significantly	2
significantly,	1
sim-	1
similar	7
similar.	1
similarities.	1
simple	8
simpler,	1
simplification	1
simplify	1
simply	2
since	6
single	5
sion	1
situations	1
size	2
size.	1
sizes	1
skipped	1
skipping	1
skips	1
slow	4
slowed	1
slower	1
slowly	1
small	6
small-scale	1
smaller	2
smaller,	1
so	7
sociated	1
some	12
sometimes	3
soon	1
sor	1
sort	9
sorted	8
sorted.	1
sorting	8
sorting,	1
sorts	5
source	4
source.	1
sources	1
source⟩	1
space	1
spec.add_input();	1
spec.output();	1
spec.set_machines(2000);	1
spec.set_map_megabytes(100);	1
spec.set_reduce_megabytes(100);	1
spec;	1
special	3
special-purpose	1
specifi-	1
specification	1
specified	5
specify	3
speeding	1
speeds	2
spend	1
spired	1
spirit	1
split	3
split-	1
split.	1
splits	3
splits.	1
splitting	1
spond	1
sponding	2
sponse	1
spread	1
sta-	1
stances	1
standard	2
start	4
started	1
starts	3
startup	3
state	4
state,	1
state.	1
stations.	1
statistical	1
statistics	2
status	3
still	2
storage	1
stored	5
stores	5
stragglers	1
stragglers.	1
straightforward.	1
string	1
string&	1
strings	2
struc-	1
struction	1
structure	2
structure.	1
structures	2
structures.	1
stuck	1
style	1
sub-	1
subdivide	1
submit	1
subset	1
subsystems	1
success	1
success-	1
successful	3
such	12
sufficient	1
suggestions	2
suggestions,	1
suitable	2
sum	1
summaries	1
summarizes	1
sums	2
supplied	4
support	7
supported	1
surprised	1
switch	1
switched	2
sys-	1
system	18
system)	1
system,	2
system.	8
systems	7
systems,	1
systems.	1
tached	1
tail	1
tailored	1
tails	1
take,	1
taken	1
taken,	1
takes	10
taking	1
target	2
targeted	3
task	34
task).	1
task,	5
task.	9
task/reduce	1
tasks	41
tasks).	1
tasks,	1
tasks.	10
tasks/output	1
task’s	1
tation	3
tations.	1
techniques	1
tem	2
tempo-	1
temporary	3
ten	1
tend	2
tends	1
ter	2
ter-	3
ter.	1
terabyte	3
terabytes	1
terface	1
term	5
termediate	2
terministic	1
terms	1
terms,	1
tern.	1
ternational	1
ters	1
terson.	1
testing	1
testing,	1
text	5
text.size();	1
than	12
thank	3
that	79
that,	1
the	500
their	11
them	4
then	8
there	5
therefore	7
these	19
they	6
things	2
third-party	1
this	33
this,	1
thou-	1
though	2
thousand	2
thousands	7
three-character	1
three-line	1
through	3
throwing	1
tial	2
time	13
time).	2
time,	3
time.	3
times.	1
tion	7
tion.	1
tioned	1
tions	2
tions.	2
tire	1
titioning	1
tive.	1
to	199
to-	1
together	7
together,	1
together.	1
tolerable	1
tolerance,	1
tolerance.	2
tolerate	1
too	2
took	2
tools	1
top	1
top-left	1
top-level	1
tors	1
total	4
towards	1
track	1
transfer	2
transfers	1
transparent	1
treats	1
tree	1
tree-shaped	1
tributed	2
tributing	1
tricky,	1
tries	1
trollable	1
trying	1
tuned	1
tuning	1
tures	1
tus	1
two	9
two-level	1
two-phase	1
type	2
types	1
types.	3
types:	1
typical	1
typically	5
ues	1
un-	2
unavail-	1
unchanged.	1
underlying	3
understand,	1
ung.	1
unique	2
unlike	1
unlikely;	1
unreachable	2
unrelated	1
unreliable	1
until	1
unusually	1
up	11
uppercase	1
uppercase->Increment();	1
uppercase;	1
upwards	1
us	5
usage	1
use	16
use,	1
use.	1
use:	1
used	17
used,	1
used.	1
useful	6
useful.	2
user	28
user).	1
user,	2
user-	2
user-definable	1
user-defined	2
user-level	1
user-supplied	1
user.	1
users	8
user’s	3
uses	6
using	9
usual	1
usually	1
utilize	1
v	1
val-	1
value	4
value):	1
value:	2
values	15
values):	1
values,	2
values.	3
values:	2
variable.	1
variety	2
various	3
vast	1
vector	1
vectors	2
vector⟩	2
venient	2
ver-	1
version	1
very	4
via	2
vice,	1
vided	1
violations	1
virtual	2
void	2
w	2
wakes	1
want	3
was	5
watch	1
we	25
weaker	2
web	6
web.	1
weekend	1
well-balanced	1
were	10
when	12
whenever	1
where	6
whether	1
which	12
while	3
while.	1
whitespace	1
who	3
whole	1
wide	2
wide-area	1
widely	1
width	2
will	6
with	35
within	8
without	3
word	10
word,	1
word.	1
words	2
work	11
work-	1
work.	2
worker	38
workers	10
workers)	1
workers).	1
workers.	4
world	1
would	7
write	8
writer	1
writes	7
writing	5
written	12
wrote	1
x86	1
years,	1
yet	1
zero	2
{	8
}	6
};	2
̈lzle.	1
–	5
‘1’	1
’99),	1
’result’	1
“hash(Hostname(urlkey))	1
“hash(key)	1
“last	1
“record”	1
“straggler”:	1
“text”	1
•	8
→	2
∗	2
⟨URL,	2
⟨hostname,	2
⟨key,	1
⟨target,	2
⟨word,	2
⟨word,list(document	1
￼	11
￼Input	1
￼Master	1
￼Number	1
￼Output	1
￼Users	1
￼split	1
￼￼(2)	1
￼￼5000	1
￼￼Figure	1
￼￼User	1
￼￼split	1
￼￼￼(1)	1
￼￼￼500	1
￼￼￼Number	1
￼￼￼To	12
￼￼￼￼20000	1
￼￼￼￼To	1
￼￼￼￼split	1
￼￼￼￼worker	1
￼￼￼￼￼(3)	1
￼￼￼￼￼5000	1
￼￼￼￼￼￼(b)	1
￼￼￼￼￼￼output	1
￼￼￼￼￼￼split	1
￼￼￼￼￼￼worker	1
￼￼￼￼￼￼￼15000	1
￼￼￼￼￼￼￼Input	2
￼￼￼￼￼￼￼split	1
￼￼￼￼￼￼￼￼Average	1
￼￼￼￼￼￼￼￼Table	1
￼￼￼￼￼￼￼￼Unique	1
